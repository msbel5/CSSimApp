@using System.Web.Optimization
@using CSSimApp.BLL.Dtos
@model CSSimApp.UI.ViewModels.BouquetFormViewModel
@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Title</h2>

@using (Html.BeginForm("Save", "Home"))
{
    @Html.ValidationSummary(true, "Please fix the following error/s.")
    <div class="form-group">
        @Html.LabelFor(m => m.Bouquet.Name)
        @Html.TextBoxFor(m => m.Bouquet.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Bouquet.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Bouquet.Size)
        @Html.DropDownListFor(m => m.Bouquet.SizeId, Model.SizeList, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Bouquet.Name)
    </div>

    <div class="form-group row">
        @for (int i = 0; i < Model.BouquetMaterials.Count(); i++)
        {
            <div class="col-xs-6">
                @Html.LabelFor(m => m.BouquetMaterials[i].Material.Name)
                @Html.TextBoxFor(m => m.BouquetMaterials[i].Material.Name, new { @class = "form-control", @readonly="readonly" })
            </div>
            <div class="col-xs-6">
                @Html.LabelFor(m => m.BouquetMaterials[i].Quantity)
                @Html.TextBoxFor(m => m.BouquetMaterials[i].Quantity, new { @class = "form-control", @type = "number"})
                @Html.ValidationMessageFor(m => m.BouquetMaterials[i].Quantity)
            </div>
            @Html.HiddenFor(c=>c.BouquetMaterials[i].Material.Id)
        }
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Bouquet.Price)
        @Html.TextBoxFor(m => m.Bouquet.Price, new { @class = "form-control", @type = "number" })
        @Html.ValidationMessageFor(m => m.Bouquet.Price)
    </div>


    @Html.HiddenFor(c => c.Bouquet.Id)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}